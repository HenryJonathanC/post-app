{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Henry\\\\OneDrive\\\\Desktop\\\\Bootcamp\\\\post\\\\src\\\\App.js\";\n// import { useEffect, useState } from 'react';\nimport './App.css';\n// import { db } from './firebase';\n// import { addDoc, collection, getDocs, doc, deleteDoc, updateDoc, } from 'firebase/firestore';\nimport Home from './components/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Add from './components/Add';\nimport Edit from './components/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [posts, setPosts]= useState([])\n  // const [newTitle, setNewTitle]= useState(\"\")\n  // const [newPost, setNewPost]= useState(\"\")\n  // const usersCollectionRef= collection(db, \"posts\")\n  // const [updatedTitle, setUpdatedTitle] = useState(\"\")\n\n  // useEffect(()=>{\n  //     const getPosts= async ()=>{\n  //       const data= await getDocs(usersCollectionRef)\n  //       setPosts(data.docs.map((doc)=> ({...doc.data(), id: doc.id })))\n  //     }\n  //     getPosts()\n  // }, [])\n\n  // const updatePost= async(id)=>{\n  //   return (\n  //     <div>\n  //       <div className='header'>\n  //         <input className=\"title\" placeholder='Title...' type='text' onChange={ e => setUpdatedTitle(e.target.value)}/>\n  //         {/* <textarea className=\"content\" placeholder='Post...' type='text' onChange={e => setNewPost(e.target.value)} /> */}\n  //         <button type='submit' className=\"ui positive button\" onClick={createPost}>Post</button>\n  //     </div>\n  //     </div>\n  //   )\n  //   const userDoc=doc(db, \"posts\", id)\n  //   await updateDoc(userDoc,  )\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          component: Add\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit/:id\",\n          component: Edit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Home","BrowserRouter","Router","Switch","Route","Add","Edit","App"],"sources":["C:/Users/Henry/OneDrive/Desktop/Bootcamp/post/src/App.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\nimport './App.css';\n// import { db } from './firebase';\n// import { addDoc, collection, getDocs, doc, deleteDoc, updateDoc, } from 'firebase/firestore';\nimport Home from './components/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Add from './components/Add';\nimport Edit from './components/Edit';\n\n\nfunction App() {\n  // const [posts, setPosts]= useState([])\n  // const [newTitle, setNewTitle]= useState(\"\")\n  // const [newPost, setNewPost]= useState(\"\")\n  // const usersCollectionRef= collection(db, \"posts\")\n  // const [updatedTitle, setUpdatedTitle] = useState(\"\")\n\n\n  // useEffect(()=>{\n  //     const getPosts= async ()=>{\n  //       const data= await getDocs(usersCollectionRef)\n  //       setPosts(data.docs.map((doc)=> ({...doc.data(), id: doc.id })))\n  //     }\n  //     getPosts()\n  // }, [])\n\n  // const updatePost= async(id)=>{\n  //   return (\n  //     <div>\n  //       <div className='header'>\n  //         <input className=\"title\" placeholder='Title...' type='text' onChange={ e => setUpdatedTitle(e.target.value)}/>\n  //         {/* <textarea className=\"content\" placeholder='Post...' type='text' onChange={e => setNewPost(e.target.value)} /> */}\n  //         <button type='submit' className=\"ui positive button\" onClick={createPost}>Post</button>\n  //     </div>\n  //     </div>\n  //   )\n  //   const userDoc=doc(db, \"posts\", id)\n  //   await updateDoc(userDoc,  )\n  // }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/add' component={Add} />\n          <Route path='/edit/:id' component={Edit} />\n        </Switch>\n      </Router>\n      \n      {/* <div className='header'>\n          <input className=\"title\" placeholder='Title...' type='text' onChange={ e => setNewTitle(e.target.value)}/>\n          <textarea className=\"content\" placeholder='Post...' type='text' onChange={e => setNewPost(e.target.value)} />\n          <button type='submit' className=\"ui positive button\" onClick={createPost}>Post</button>\n      </div>\n      {console.log(posts)}\n      <hr/>\n      <h1 className='heading'>Posts</h1>\n      <div className='post'>\n        {posts.map((post) => {\n          return (\n            <div key={post.id}>\n              <hr />\n              <div className='post_header'>\n                <h3>{post.Title}</h3>\n                <div className='icons'>  \n                  <i onClick={() => deletePost(post.id)} style={{ color: 'darkred', paddingRight: '5px', cursor: 'pointer'}} className='trash alternate outline icon'></i>\n                  <i onClick={() => updatePost(post.id)} style={{cursor: 'pointer'}} className='edit outline icon'></i>\n                </div>\n              </div>\n              <p>{post.Post}</p>\n            </div>\n          )\n        })}\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAO,WAAW;AAClB;AACA;AACA,OAAOA,IAAI,MAAM,mBAAmB;AACpC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,IAAI,MAAM,mBAAmB;AAAC;AAGrC,SAASC,GAAG,GAAG;EACb;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,MAAM;MAAA,uBACL,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,KAAK;UAAC,SAAS,EAAEP;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG,eACzC,QAAC,KAAK;UAAC,IAAI,EAAC,MAAM;UAAC,SAAS,EAAEK;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACrC,QAAC,KAAK;UAAC,IAAI,EAAC,WAAW;UAAC,SAAS,EAAEC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACpC;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QA2BL;AAEV;AAAC,KAnEQC,GAAG;AAqEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}