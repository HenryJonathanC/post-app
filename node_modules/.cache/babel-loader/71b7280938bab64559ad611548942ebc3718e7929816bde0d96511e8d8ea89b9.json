{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Henry\\\\OneDrive\\\\Desktop\\\\Bootcamp\\\\post\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { db } from './firebase';\nimport { addDoc, collection, getDocs, doc, deleteDoc, updateDoc } from 'firebase/firestore';\nimport Home from './components/Home';\nimport { BrowserRouter as Route, Router, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newPost, setNewPost] = useState(\"\");\n  const usersCollectionRef = collection(db, \"posts\");\n  const [updatedTitle, setUpdatedTitle] = useState(\"\");\n\n  // useEffect(()=>{\n  //     const getUsers= async ()=>{\n  //       const data= await getDocs(usersCollectionRef)\n  //       setPosts(data.docs.map((doc)=> ({...doc.data(), id: doc.id })))\n  //     }\n  //     getUsers()\n  // }, [])\n\n  // const createPost = async ()=>{\n  //   if(newTitle && newPost === \" \") alert(\"All fields are required\")\n  //   await addDoc(usersCollectionRef, {Title: newTitle, Post: newPost})\n  // }\n\n  const deletePost = async id => {\n    const userDoc = doc(db, \"posts\", id);\n    await deleteDoc(userDoc);\n  };\n  const updatePost = async id => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"title\",\n          placeholder: \"Title...\",\n          type: \"text\",\n          onChange: e => setUpdatedTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"ui positive button\",\n          onClick: createPost,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n    const userDoc = doc(db, \"posts\", id);\n    await updateDoc(userDoc);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iQFG5gfK93g06tm/67Ay8E0YKmw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","db","addDoc","collection","getDocs","doc","deleteDoc","updateDoc","Home","BrowserRouter","Route","Router","Switch","App","posts","setPosts","newTitle","setNewTitle","newPost","setNewPost","usersCollectionRef","updatedTitle","setUpdatedTitle","deletePost","id","userDoc","updatePost","e","target","value","createPost"],"sources":["C:/Users/Henry/OneDrive/Desktop/Bootcamp/post/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport { db } from './firebase';\nimport { addDoc, collection, getDocs, doc, deleteDoc, updateDoc, } from 'firebase/firestore';\nimport Home from './components/Home';\nimport { BrowserRouter as Route, Router, Switch } from 'react-router-dom';\n\n\nfunction App() {\n  const [posts, setPosts]= useState([])\n  const [newTitle, setNewTitle]= useState(\"\")\n  const [newPost, setNewPost]= useState(\"\")\n  const usersCollectionRef= collection(db, \"posts\")\n  const [updatedTitle, setUpdatedTitle] = useState(\"\")\n\n\n  // useEffect(()=>{\n  //     const getUsers= async ()=>{\n  //       const data= await getDocs(usersCollectionRef)\n  //       setPosts(data.docs.map((doc)=> ({...doc.data(), id: doc.id })))\n  //     }\n  //     getUsers()\n  // }, [])\n\n  // const createPost = async ()=>{\n  //   if(newTitle && newPost === \" \") alert(\"All fields are required\")\n  //   await addDoc(usersCollectionRef, {Title: newTitle, Post: newPost})\n  // }\n\n  const deletePost= async(id)=>{\n    const userDoc= doc(db, \"posts\", id)\n    await deleteDoc(userDoc)\n  }\n\n  const updatePost= async(id)=>{\n    return (\n      <div>\n        <div className='header'>\n          <input className=\"title\" placeholder='Title...' type='text' onChange={ e => setUpdatedTitle(e.target.value)}/>\n          {/* <textarea className=\"content\" placeholder='Post...' type='text' onChange={e => setNewPost(e.target.value)} /> */}\n          <button type='submit' className=\"ui positive button\" onClick={createPost}>Post</button>\n      </div>\n      </div>\n    )\n    const userDoc=doc(db, \"posts\", id)\n    await updateDoc(userDoc,  )\n  }\n\n  return (\n    <div className=\"App\">\n      <Home />\n      \n      {/* <div className='header'>\n          <input className=\"title\" placeholder='Title...' type='text' onChange={ e => setNewTitle(e.target.value)}/>\n          <textarea className=\"content\" placeholder='Post...' type='text' onChange={e => setNewPost(e.target.value)} />\n          <button type='submit' className=\"ui positive button\" onClick={createPost}>Post</button>\n      </div>\n      {console.log(posts)}\n      <hr/>\n      <h1 className='heading'>Posts</h1> */}\n      {/* <div className='post'>\n        {posts.map((post) => {\n          return (\n            <div key={post.id}>\n              <hr />\n              <div className='post_header'>\n                <h3>{post.Title}</h3>\n                <div className='icons'>  \n                  <i onClick={() => deletePost(post.id)} style={{ color: 'darkred', paddingRight: '5px', cursor: 'pointer'}} className='trash alternate outline icon'></i>\n                  <i onClick={() => updatePost(post.id)} style={{cursor: 'pointer'}} className='edit outline icon'></i>\n                </div>\n              </div>\n              <p>{post.Post}</p>\n            </div>\n          )\n        })}\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,SAASC,EAAE,QAAQ,YAAY;AAC/B,SAASC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,GAAG,EAAEC,SAAS,EAAEC,SAAS,QAAS,oBAAoB;AAC5F,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,aAAa,IAAIC,KAAK,EAAEC,MAAM,EAAEC,MAAM,QAAQ,kBAAkB;AAAC;AAG1E,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAEf,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAEjB,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAEnB,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAMoB,kBAAkB,GAAEjB,UAAU,CAACF,EAAE,EAAE,OAAO,CAAC;EACjD,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;;EAGpD;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,MAAMuB,UAAU,GAAE,MAAMC,EAAE,IAAG;IAC3B,MAAMC,OAAO,GAAEpB,GAAG,CAACJ,EAAE,EAAE,OAAO,EAAEuB,EAAE,CAAC;IACnC,MAAMlB,SAAS,CAACmB,OAAO,CAAC;EAC1B,CAAC;EAED,MAAMC,UAAU,GAAE,MAAMF,EAAE,IAAG;IAC3B,oBACE;MAAA,uBACE;QAAK,SAAS,EAAC,QAAQ;QAAA,wBACrB;UAAO,SAAS,EAAC,OAAO;UAAC,WAAW,EAAC,UAAU;UAAC,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAGG,CAAC,IAAIL,eAAe,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eAE9G;UAAQ,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC,oBAAoB;UAAC,OAAO,EAAEC,UAAW;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACrF;MAAA;MAAA;MAAA;IAAA,QACA;IAER,MAAML,OAAO,GAACpB,GAAG,CAACJ,EAAE,EAAE,OAAO,EAAEuB,EAAE,CAAC;IAClC,MAAMjB,SAAS,CAACkB,OAAO,CAAI;EAC7B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QA2BJ;AAEV;AAAC,GAvEQZ,GAAG;AAAA,KAAHA,GAAG;AAyEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}